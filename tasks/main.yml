---
- name: 'Check variables'
  assert:
    that:
      - openvpn_auth in supported_auth
    fail_msg: 'Unsupported configuration!'

- name: 'Install packages'
  package:
    name:
      - 'openvpn'
      - 'haveged'
    state: 'present'

- name: 'Ensure services'
  service:
    name: "{{ service }}"
    state: 'started'
    enabled: true
  loop:
    - 'haveged'
  loop_control:
    loop_var: 'service'

- name: 'Ensure OpenVPN config directories'
  file:
    path: "/etc/openvpn/{{ dir['name'] }}"
    state: 'directory'
    mode: "{{ dir['mode'] }}"
    owner: 'root'
    group: 'root'
  loop:
    - { name: 'bin', mode: '0755' }
    - { name: 'ccd', mode: '0755' }
    - { name: 'private', mode: '0700' }
    - { name: 'ssl', mode: '0700' }
  loop_control:
    loop_var: 'dir'

- name: 'Ensure OpenVPN log directory'
  file:
    path: '/var/log/openvpn'
    state: 'directory'
    mode: 0755
    owner: 'root'
    group: 'root'

- name: 'Ensure OpenVPN authentication script'
  copy:
    src: 'authenticate.sh'
    dest: '/etc/openvpn/bin/authenticate.sh'
    mode: 0755
    owner: 'root'
    group: 'root'
  when: openvpn_auth == 'script'

- name: 'Ensure OpenVPN server config'
  template:
    src: 'server.conf.j2'
    dest: '/etc/openvpn/server.conf'
    mode: 0755
    owner: 'root'
    group: 'root'
  notify: 'restart openvpn'

- name: 'Ensure kernel system parameters'
  ansible.posix.sysctl:
    name: "{{ sysctl_param.name }}"
    value: "{{ sysctl_param.value }}"
    state: 'present'
    sysctl_set: true
    reload: true
  loop:
    - name: 'net.ipv4.ip_forward'
      value: 1
    - name: 'net.ipv4.ip_no_pmtu_disc'
      value: 1
    - name: 'net.ipv4.conf.all.accept_redirects'
      value: 0
    - name: 'net.ipv4.conf.all.send_redirects'
      value: 0
  loop_control:
    loop_var: 'sysctl_param'

- name: 'Ensure DHparams'
  community.crypto.openssl_dhparam:
    path: '/etc/openvpn/ssl/dh4096.pem'
    size: "{{ openvpn_dhparams_size }}"
    mode: 0644
    owner: 'root'
    group: 'root'

- name: 'Ensure password file present'
  copy:
    src: 'passwd.example'
    dest: '/etc/openvpn/private/passwd'
    force: false

- name: 'Setup firewall'
  import_tasks: 'firewall_iptables.yml'
  when:
    - ansible_facts['os_family'] == 'Debian'
    - openvpn_manage_firewall

- name: 'Setup firewall'
  import_tasks: 'firewall_firewalld.yml'
  when:
    - ansible_facts['os_family'] == 'RedHat'
    - openvpn_manage_firewall

- name: 'Enable and start service'
  service:
    name: 'openvpn@server'
    state: 'started'
    enabled: true
